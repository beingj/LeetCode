using System;

namespace LeetCode
{
    class Program
    {
        static void Main(string[] args)
        {
            // TwoSum.Test.Run();
            // AddTwoNumbers.Test.Run();
            // LengthOfLongestSubstring.Test.Run();
            // FindMedianSortedArrays.Test.Run();
            // LongestPalindrome.Test.Run();
            // ZigZag.Test.Run();
            // ReverseInteger.Test.Run();
            // MyAtoi.Test.Run();
            // PalindromeNumber.Test.Run();
            // ContainerWithMostWater.Test.Run();
            // IntegerToRoman.Test.Run();
            // RomanToInteger.Test.Run();
            // LongestCommonPrefix.Test.Run();
            // ThreeSum.Test.Run();
            // ThreeSumClosest.Test.Run();
            // LetterCombinationsOfAPhoneNumber.Test.Run();
            // FourSum.Test.Run();
            // RemoveNthFromEnd.Test.Run();
            // ValidParentheses.Test.Run();
            // MergeTwoSortedLists.Test.Run();
            // GenerateParentheses.Test.Run();
            // X022.Test.Run();
            // MergekSortedLists.Test.Run();
            // SwapNodesInPairs.Test.Run();
            // ReverseNodesInkGroup.Test.Run();
            // RemoveDuplicatesFromSortedArray.Test.Run();
            // RemoveElement.Test.Run();
            // StrStr.Test.Run();
            // DivideTwoIntegers.Test.Run();
            // SubstringWithConcatenationOfAllWords.Test.Run();
            // NextPermutation.Test.Run();
            // LongestValidParentheses.Test.Run();
            // SearchInRotatedSortedArray.Test.Run();
            // FindFirstAndLastPositionOfElementInSortedArray.Test.Run();
            // SearchInsertPosition.Test.Run();
            // IsValidSudoku.Test.Run();
            // SudokuSolver.Test.Run();
            // X037.Test.Run();
            // CountAndSay.Test.Run();
            // CombinationSum.Test.Run();
            // CombinationSum2.Test.Run();
            // FirstMissingPositive.Test.Run();
            // TrappingRainWater.Test.Run();
            // MultiplyStrings.Test.Run();
            // JumpGameII.Test.Run();
            // Permutations.Test.Run();
            // PermutationsII.Test.Run();
            // RotateImage.Test.Run();
            // GroupAnagrams.Test.Run();
            // MyPow.Test.Run();
            // RegularExpressionMatching.Test.Run();
            // WildcardMatching.Test.Run();
            // X044.Test.Run();
            // NQueens.Test.Run();
            // NQueensII.Test.Run();
            // MaxSubArray.Test.Run();
            // SpiralMatrix.Test.Run();
            // JumpGame.Test.Run();
            // MergeIntervals.Test.Run();
            // InsertInterval.Test.Run();
            // LengthOfLastWord.Test.Run();
            // SpiralMatrixII.Test.Run();
            // PermutationSequence.Test.Run();
            // RotateList.Test.Run();
            // UniquePaths.Test.Run();
            // UniquePathsII.Test.Run();
            // MinimumPathSum.Test.Run();
            // ValidNumber.Test.Run();
            // PlusOne.Test.Run();
            // AddBinary.Test.Run();
            // TextJustification.Test.Run();
            // Sqrt.Test.Run();
            // ClimbingStairs.Test.Run();
            // SimplifyPath.Test.Run();
            // EditDistance.Test.Run();
            // SetMatrixZeroes.Test.Run();
            // SearchA2DMatrix.Test.Run();
            // SortColors.Test.Run();
            // MinimumWindowSubstring.Test.Run();
            // Combinations.Test.Run();
            // Subsets.Test.Run();
            // WordSearch.Test.Run();
            // RemoveDuplicatesFromSortedArrayII.Test.Run();
            // SearchInRotatedSortedArrayII.Test.Run();
            // RemoveDuplicatesFromSortedListII.Test.Run();
            // RemoveDuplicatesFromSortedList.Test.Run();
            // LargestRectangleInHistogram.Test.Run();
            // MaximalRectangle.Test.Run();
            // PartitionList.Test.Run();
            // ScrambleString.Test.Run();
            // MergeSortedArray.Test.Run();
            // GrayCode.Test.Run();
            // SubsetsII.Test.Run();
            // DecodeWays.Test.Run();
            // ReverseLinkedListII.Test.Run();
            // RestoreIpAddresses.Test.Run();
            // BinaryTreeInorderTraversal.Test.Run();
            // UniqueBinarySearchTreesII.Test.Run();
            // UniqueBinarySearchTrees.Test.Run();
            // InterleavingString.Test.Run();
            // ValidateBinarySearchTree.Test.Run();
            // RecoverBinarySearchTree.Test.Run();
            // SameTree.Test.Run();
            // SymmetricTree.Test.Run();
            // BinaryTreeLevelOrderTraversal.Test.Run();
            // BinaryTreeZigzagLevelOrderTraversal.Test.Run();
            // MaximumDepthOfBinaryTree.Test.Run();
            // ConstructBinaryTreeFromPreorderAndInorderTraversal.Test.Run();
            // ConstructBinaryTreeFromInorderAndPostorderTraversal.Test.Run();
            // BinaryTreeLevelOrderTraversalII.Test.Run();
            // ConvertSortedArrayToBinarySearchTree.Test.Run();
            // ConvertSortedListToBinarySearchTree.Test.Run();
            // BalancedBinaryTree.Test.Run();
            // MinimumDepthOfBinaryTree.Test.Run();
            // PathSum.Test.Run();
            // PathSumII.Test.Run();
            // FlattenBinaryTreeToLinkedList.Test.Run();
            // DistinctSubsequences.Test.Run();
            // PopulatingNextRightPointersInEachNode.Test.Run();
            // PopulatingNextRightPointersInEachNodeII.Test.Run();
            // PascalsTriangle.Test.Run();
            // PascalsTriangleII.Test.Run();
            // Triangle.Test.Run();
            // BestTimeToBuyAndSellStock.Test.Run();
            // BestTimeToBuyAndSellStockII.Test.Run();
            // BestTimeToBuyAndSellStockIII.Test.Run();
            // BinaryTreeMaximumPathSum.Test.Run();
            // ValidPalindrome.Test.Run();
            // WordLadder.Test.Run();
            // WordLadderII.Test.Run();
            // LongestConsecutiveSequence.Test.Run();
            // SumRootToLeafNumbers.Test.Run();
            // SurroundedRegions.Test.Run();
            // PalindromePartitioning.Test.Run();
            // PalindromePartitioningII.Test.Run();
            // CloneGraph.Test.Run();
            // GasStation.Test.Run();
            // Candy.Test.Run();
            // SingleNumber.Test.Run();
            // SingleNumberII.Test.Run();
            // CopyListWithRandomPointer.Test.Run();
            // WordBreak.Test.Run();
            // WordBreakII.Test.Run();
            // LinkedListCycle.Test.Run();
            // LinkedListCycleII.Test.Run();
            // MaxPointsOnALine.Test.Run();
            // ReorderList.Test.Run();
            // BinaryTreePreorderTraversal.Test.Run();
            // BinaryTreePostorderTraversal.Test.Run();
            // LRUCache.Test.Run();
            // InsertionSortList.Test.Run();
            // SortList.Test.Run();
            // EvaluateReversePolishNotation.Test.Run();
            ReverseWordsInAString.Test.Run();
        }
    }
}
